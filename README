----------------------------------------------
rnaseqmut: detecting mutations in RNA-Seq samples
Author: Wei Li 
Department of Biostatistics and Computational Biology
Dana-Farber Cancer Institute, Harvard School af Public Health
Email: li.david.wei AT gmail.com
----------------------------------------------

0. Introduction

rnaseqmut is a light-weight C++ program to detect variants (or mutations, including SNPs, indels) from RNA-Seq BAM files. It offers the following features:

  (1) Perform de-novo mutation discovery from a given BAM file;
  (2) For a user-defined mutation list, calculate the read coverage, including reads that support reference allele (reference reads) and alternative allele (alternative reads), from a given BAM file; 
  (3) For a series of RNA-Seq samples, filter interesting mutations based on user-defined criteria.

This software package includes a "core" C++ program, rnaseqmut, to call variants from a single BAM file, and a series of optional scripts, written in Python3 and bash, to identify putative interesting mutations in a group of RNA-Seq samples. 

Besides mutation detection from RNA-Seq, the "core" program (rnaseqmut) can also be used to call mutations from other high-throughput sequencing platforms, including ChIP-seq, DNA-Seq, etc.

I.     Before running rnaseqmut

II.    Usage

III.   Demo: detecting mutations from a series of RNA-Seq BAM files

IV.    Acknowledgements

V.     Version History

----------------------------------------------
I.     Before running rnaseqmut
----------------------------------------------

1. System requirements

To run the "core" program, only C++ compiler (gcc version >4.1) is needed. To use the supplementary scripts including demo, Linux system with Python3 support is required.

2. Compiling

To compile rnaseqmut, you need to first compile bamtools. To compile bamtools, go to the src/bamtools dir, and follow the instructions in bamtools help page below:

https://github.com/pezmaster31/bamtools/wiki/Building-and-installing

After bamtools compilation is complete, go back to the src dir and type

  make

to finish the compilation. After compilation, the executable is in the bin/ directory.


3. Installation

After compiling is successful, add the "bin/" (or "scripts/", if necessary) directory to your PATH variable:

  export PATH=$PATH:/the_path_to_the_rnaseqmut_dir/bin:$PATH

4. Data preparation

rnaseqmut requires sorted BAM files with index (.bai file) as input. Use "samtools sort/index" to sort/index BAM files before running rnaseqmut.

rnaseqmut detects mutations from the NM tag and MD tag in the BAM format (see http://samtools.sourceforge.net/SAMv1.pdf for BAM specification). If the NM or MD tag is missing in your BAM file (this is common if reads are aligned using older RNA-Seq read mapping softwares), you may need to realign them using the latest RNA-Seq read aligners (e.g., Tophat).


----------------------------------------------
II.    Usage
----------------------------------------------

The usage of the "core" program, rnaseqmut, and a couple of optional scripts, is listed below.

1. rnaseqmut: the core mutation detection program

USAGE:

   rnaseqmut  [-r <ref_fasta>] [-l <mutation_list>] [-k] [-d] [-n] [-i
              <min_read>] [-m <mut_span>] [--] [--version] [-h] <bam_file>


Where:

   -r <ref_fasta>,  --ref_fasta <ref_fasta>
     The (optional) fasta file for the reference genome

   -l <mutation_list>,  --mutation_list <mutation_list>
     The text file of a given, sorted list of mutations. Each line in a
     file records one mutations, with chromosome, location, reference and
     alternative sequence (separated by tab). The output will only include
     mutations within a given mutation list.

   -k,  --with_indel_read
     Do not skip reads with indels. By default all reads with indels are
     skipped as most RNA-Seq are performed by Illumina sequencing, which is
     prone to indel errors.

   -d,  --with_indel
     Do not skip indels. By default all indels are skipped as most RNA-Seq
     are performed by Illumina sequencing, which is prone to indel errors.

   -n,  --output_n
     Treat the character N as substitutions.

   -i <min_read>,  --min_read <min_read>
     The minimum read count for the mutation to output. Default 1.

   -m <mut_span>,  --mut_span <mut_span>
     The minimum distance of the mutation to the beginning (end) of the
     read. Default 4.

   --,  --ignore_rest
     Ignores the rest of the labeled arguments following this flag.

   --version
     Displays version information and exits.

   -h,  --help
     Displays usage information and exits.


   <bam_file>
     (required)  The bam file from which mutation will be called


   Calling mutations in BAM file.


2. merge2ndvcf.py: (optional) merging mutations from multiple RNA-Seq scans.

usage: merge2ndvcf.py [-h] [-l LABEL] [-x REGION] [-m] [-v] [-r MIN_READ] ...

merge tab delimited files from multiple RNA-Seq samples (usually be a second
scan results of rnaseqmut program) into a tab delimited file, preserving all
information. All merged files should have exactly the same order and content
of mutations.

positional arguments:
  vcffiles              VCF file names

optional arguments:
  -h, --help            show this help message and exit
  -l LABEL, --label LABEL
                        The labels of each sample, separated by the comma
  -x REGION, --region REGION
                        Only output mutations falling into a specific region,
                        for example chr11:1-10000
  -m, --merged          Merge forward and reverse fields into one
  -v, --output-vcf      Output VCF formatted files
  -r MIN_READ, --min-read MIN_READ
                        Minimum read requirement for ALT reads. Default 4.

3. filtermut.py: (optional) filter mutations based on user-defined criterion. 

usage: filtermut.py [-h] [-c CONTROL] [-i TREATMENT] [-t MIN_RECURRENT]
                    [-d MIN_RECREAD] [-f MIN_RECFRAC] [-a MIN_REF]
                    [-b MAX_ALT] [-p] [-n] [-z] [-l LABELS] [--DP2]
                    [--DP2-out] [-x REGION]

filter mutations in samples.

optional arguments:
  -h, --help            show this help message and exit

Sample definitions:
  -c CONTROL, --control CONTROL
                        The index of control group samples, separated by
                        comma. For example, 0,2,4 defines a control group of 3
                        samples: the 1st, the 3rd and the 5th sample in the
                        order of the input table. Default: empty (do not use
                        any control samples)
  -i TREATMENT, --treatment TREATMENT
                        The index of treatment group samples, separated by
                        comma. Default: complement of control samples (if
                        -c/--control option is not specified, use all samples
                        as treatment samples).
  -t MIN_RECURRENT, --min-recurrent MIN_RECURRENT
                        Print mutations only occuring in at least this number
                        of good treatment samples, defined as those with
                        mutation >=min-recread reads and >=min-recfrac percent
                        frequency. Default 1.
  -d MIN_RECREAD, --min-recread MIN_RECREAD
                        Minimum alt reads defined in treated good samples,
                        default 10.
  -f MIN_RECFRAC, --min-recfrac MIN_RECFRAC
                        Minimum alt reads frequency in treated good samples,
                        default 0.2.
  -a MIN_REF, --min-ref MIN_REF
                        Minimum reference reads in control samples. Default 4.
  -b MAX_ALT, --max-alt MAX_ALT
                        Maximum alternative reads in control samples. Default
                        4.

Input/output options:
  -p, --passall         Do not do any filtering
  -n, --no-header       Do not print header and script used
  -z, --no-vcf          Do not print in vcf format; print as it is.
  -l LABELS, --labels LABELS
                        Labels used for each sample, separated by comma.
                        Default: SAMPLE_x where x is the sample ID. The number
                        of lables MUST be identical to the number of all
                        samples in the original table, not only those defined
                        by the -c/-i parameter.
  --DP2                 DP2 field instad of DP4 field is used in both
                        input/output files
  --DP2-out             DP2 field instad of DP4 field is used in output files.
                        This option is automatically set true if --DP2 is
                        specified.
  -x REGION, --region REGION
                        Only output mutations falling into a specific region,
                        for example chr11:1-10000



----------------------------------------------
III.   Demo: detecting mutations from a series of RNA-Seq BAM files
----------------------------------------------
A demo script is provided in the demo directory, together with 4 sample RNA-Seq BAM files. This demo illustrates the basic usage of rnaseqmut, including calling de-novo mutations, merging mutations from different samples, calling mutations based on a given list of mutations, and filtering mutations.

A Linux system (with Python3 support) is required to run the full demo. If only core program is needed, you can just run the first 3 or 4 steps. 

For more details, refer to the demo script and the usage of each programs/scripts.

----------------------------------------------
IV.    Acknowledgements
----------------------------------------------

rnaseqmut depends on several third-party C++ packages, including bamtools (written by Derek Barnett, https://github.com/pezmaster31/bamtools), TCLAP (Templatized C++ Command Line Parser Library, written by Michael E. Smoot, http://tclap.sourceforge.net/), FASTA/FASTQ parser in C (by Heng Li, http://lh3lh3.users.sourceforge.net/parsefastq.shtml). The source codes of these packages are included in rnaseqmut source code.

----------------------------------------------
V.     Version History
----------------------------------------------
09/16/2013	0.3	rnaseqmut allows comparing mutations with reference genome.
			By default, rnaseqmut will skip all indels and all reads with indels; this behavior can be controlled by -k and -d options. 
			Fix several bugs.
09/14/2013	0.2	Fix a bug of failing to read NM tags for some versions of BAM.
                        By default, suppress mutations with character "N" (controlled by -n option in rnaseqmut)
09/12/2013	0.1	rnaseqmut software initiated.
